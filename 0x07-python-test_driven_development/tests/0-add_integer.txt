Using ``add_integer``
------------------------

Argument "b" is default to int "98"
Makes sure the arguments are type int
Returns the sum of the arguments

First import ``add_integer``

   >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

Basic usage:
   >>> add_integer(3, 4)
   7

Negative input:
   >>> add_integer(100, -2)
   98

One input:
   >>> add_integer(2)
   100

Float and negative input:
   >>> add_integer(100.3, -2)
   98

Float overflow:
   >>> add_integer(1500.5)
   1598

string input:
   >>> add_integer(4, "Ethiopia")
   Traceback (most recent call last):
   ...
   TypeError: b must be an integer

None input:
   >>> add_integer(None)
   Traceback (most recent call last):
   ...
   TypeError: a must be an integer

Both arguments negative float input:
   >>> add_integer(-100.5, -10.8)
   -110

Both arguments string input:
   >>> add_integer("ethiopia", "inafrica")
   Traceback (most recent call last):
   ...
   TypeError: a must be an integer
