Test case for ``100-matrix_mul``
============================

Import the module first:

             >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Success cases:

             >>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
             [[7, 10], [15, 22]]
             >>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
             [[13, 16]]
             >>> print(matrix_mul([[1, 2]], [[1], [2]]))
             [[5]]
             >>> print(matrix_mul([[2], [3]], [[1, 2]]))
             [[2, 4], [3, 6]]

Fail cases:

             >>> try:
             ...  print(matrix_mul([(1, 2), (3, 4)], [[1, 2], [3, 4]]))
             ... except Exception as e:
             ...  print(e)
             ...
             m_a must be a list of lists
             >>> try:
             ...  print(matrix_mul([[1, 2], [3, 4]], ([1, 2], [3, 4])))
             ... except Exception as e:
             ...  print(e)
             ...
             m_b must be list
             >>> try:
             ...  print(matrix_mul([[]], [[1]]))
             ... except Exception as e:
             ...  print(e)
             ...
             m_a can't be empty
             >>> try:
             ...  print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, '3']]))
             ... except Exception as e:
             ...  print(e)
             ...
             m_b should contain only integers or floats
             >>> try:
             ...  print(matrix_mul([[1], [3, 4]], [[1, 2], [3, 3]]))
             ... except Exception as e:
             ...  print(e)
             ...
             m_a and m_b can't be multiplied
             >>> try:
             ...  print(matrix_mul([[1, 2]], [[2, 3]]))
             ... except Exception as e:
             ...  print(e)
             ...
             m_a and m_b can't be multiplied
